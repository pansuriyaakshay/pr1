{"ast":null,"code":"var _jsxFileName = \"E:\\\\class_component_\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Breakfast from './component/breakfast'; // Correct component names\nimport Lunch from './component/lunch'; // Correct component names\nimport Dinner from './component/dinner'; // Correct component names\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  // Use class App extends React.Component\n  constructor() {\n    super();\n    this.state = {\n      currentTime: new Date().toLocaleTimeString()\n    };\n  }\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        currentTime: new Date().toLocaleTimeString()\n      });\n    }, 1000);\n  }\n  render() {\n    let component;\n    let time = new Date().getHours();\n    if (time >= 6 && time < 12) {\n      // Compare numbers instead of strings\n      component = /*#__PURE__*/_jsxDEV(Breakfast, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 19\n      }, this);\n    } else if (time >= 12 && time < 17) {\n      // Compare numbers instead of strings\n      component = /*#__PURE__*/_jsxDEV(Lunch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }, this);\n    } else if (time >= 17 && time < 21) {\n      // Compare numbers instead of strings\n      component = /*#__PURE__*/_jsxDEV(Dinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: this.state.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Breakfast","Lunch","Dinner","jsxDEV","_jsxDEV","Fragment","_Fragment","App","Component","constructor","state","currentTime","Date","toLocaleTimeString","componentDidMount","setInterval","setState","render","component","time","getHours","fileName","_jsxFileName","lineNumber","columnNumber","children"],"sources":["E:/class_component_/src/App.js"],"sourcesContent":["import React from 'react';\nimport './App.css';\nimport Breakfast from './component/breakfast'; // Correct component names\nimport Lunch from './component/lunch';         // Correct component names\nimport Dinner from './component/dinner';       // Correct component names\n\nclass App extends React.Component { // Use class App extends React.Component\n  constructor() {\n    super();\n    this.state = {\n      currentTime: new Date().toLocaleTimeString(),\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        currentTime: new Date().toLocaleTimeString(),\n      });\n    }, 1000);\n  }\n\n  render() {\n    let component;\n    let time = new Date().getHours();\n\n    if (time >= 6 && time < 12) { // Compare numbers instead of strings\n      component = <Breakfast />;\n    } else if (time >= 12 && time < 17) { // Compare numbers instead of strings\n      component = <Lunch />;\n    } else if (time >= 17 && time < 21) { // Compare numbers instead of strings\n      component = <Dinner />;\n    }\n\n    return (\n      <>\n        <h1>{this.state.currentTime}</h1>\n        <div>{time}</div>\n        <div>{component}</div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,uBAAuB,CAAC,CAAC;AAC/C,OAAOC,KAAK,MAAM,mBAAmB,CAAC,CAAS;AAC/C,OAAOC,MAAM,MAAM,oBAAoB,CAAC,CAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,GAAG,SAASR,KAAK,CAACS,SAAS,CAAC;EAAE;EAClCC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,KAAK,GAAG;MACXC,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAC7C,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBC,WAAW,CAAC,MAAM;MAChB,IAAI,CAACC,QAAQ,CAAC;QACZL,WAAW,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;MAC7C,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV;EAEAI,MAAMA,CAAA,EAAG;IACP,IAAIC,SAAS;IACb,IAAIC,IAAI,GAAG,IAAIP,IAAI,CAAC,CAAC,CAACQ,QAAQ,CAAC,CAAC;IAEhC,IAAID,IAAI,IAAI,CAAC,IAAIA,IAAI,GAAG,EAAE,EAAE;MAAE;MAC5BD,SAAS,gBAAGd,OAAA,CAACJ,SAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC3B,CAAC,MAAM,IAAIL,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAAE;MACpCD,SAAS,gBAAGd,OAAA,CAACH,KAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACvB,CAAC,MAAM,IAAIL,IAAI,IAAI,EAAE,IAAIA,IAAI,GAAG,EAAE,EAAE;MAAE;MACpCD,SAAS,gBAAGd,OAAA,CAACF,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACxB;IAEA,oBACEpB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA;QAAAqB,QAAA,EAAK,IAAI,CAACf,KAAK,CAACC;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjCpB,OAAA;QAAAqB,QAAA,EAAMN;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjBpB,OAAA;QAAAqB,QAAA,EAAMP;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eACtB,CAAC;EAEP;AACF;AAEA,eAAejB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}